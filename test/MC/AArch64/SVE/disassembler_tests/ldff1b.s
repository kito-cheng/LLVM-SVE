# RUN: llvm-mc -triple=aarch64-none-linux-gnu -show-encoding -disassemble -mattr=+sve < %s | FileCheck %s
# RUN: llvm-mc -triple=aarch64-none-linux-gnu -show-encoding -disassemble -mattr=-sve 2>&1 < %s | FileCheck --check-prefix=CHECK-ERROR  %s
0x00,0x60,0x00,0xa4
# CHECK: ldff1b  {z0.b}, p0/z, [x0, x0] // encoding: [0x00,0x60,0x00,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xb7,0xed,0x28,0x84
# CHECK: ldff1b  {z23.s}, p3/z, [z13.s, #8] // encoding: [0xb7,0xed,0x28,0x84]
# CHECK-ERROR: invalid instruction encoding
0xff,0x7f,0x5f,0xc4
# CHECK: ldff1b  {z31.d}, p7/z, [sp, z31.d, sxtw] // encoding: [0xff,0x7f,0x5f,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x55,0xf5,0x35,0x84
# CHECK: ldff1b  {z21.s}, p5/z, [z10.s, #21] // encoding: [0x55,0xf5,0x35,0x84]
# CHECK-ERROR: invalid instruction encoding
0xb7,0x6d,0x28,0xa4
# CHECK: ldff1b  {z23.h}, p3/z, [x13, x8] // encoding: [0xb7,0x6d,0x28,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xff,0x7f,0x1f,0x84
# CHECK: ldff1b  {z31.s}, p7/z, [sp, z31.s, uxtw] // encoding: [0xff,0x7f,0x1f,0x84]
# CHECK-ERROR: invalid instruction encoding
0xff,0x7f,0x1f,0xa4
# CHECK: ldff1b  {z31.b}, p7/z, [sp] // encoding: [0xff,0x7f,0x1f,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xb7,0xed,0x28,0xc4
# CHECK: ldff1b  {z23.d}, p3/z, [z13.d, #8] // encoding: [0xb7,0xed,0x28,0xc4]
# CHECK-ERROR: invalid instruction encoding
0xb7,0x6d,0x48,0xa4
# CHECK: ldff1b  {z23.s}, p3/z, [x13, x8] // encoding: [0xb7,0x6d,0x48,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xff,0x7f,0x7f,0xa4
# CHECK: ldff1b  {z31.d}, p7/z, [sp] // encoding: [0xff,0x7f,0x7f,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xff,0x7f,0x3f,0xa4
# CHECK: ldff1b  {z31.h}, p7/z, [sp] // encoding: [0xff,0x7f,0x3f,0xa4]
# CHECK-ERROR: invalid instruction encoding
0x00,0xe0,0x20,0xc4
# CHECK: ldff1b  {z0.d}, p0/z, [z0.d] // encoding: [0x00,0xe0,0x20,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x00,0xe0,0x40,0xc4
# CHECK: ldff1b  {z0.d}, p0/z, [x0, z0.d] // encoding: [0x00,0xe0,0x40,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x00,0xe0,0x20,0x84
# CHECK: ldff1b  {z0.s}, p0/z, [z0.s] // encoding: [0x00,0xe0,0x20,0x84]
# CHECK-ERROR: invalid instruction encoding
0x55,0x75,0x75,0xa4
# CHECK: ldff1b  {z21.d}, p5/z, [x10, x21] // encoding: [0x55,0x75,0x75,0xa4]
# CHECK-ERROR: invalid instruction encoding
0x55,0xf5,0x35,0xc4
# CHECK: ldff1b  {z21.d}, p5/z, [z10.d, #21] // encoding: [0x55,0xf5,0x35,0xc4]
# CHECK-ERROR: invalid instruction encoding
0xff,0xff,0x5f,0xc4
# CHECK: ldff1b  {z31.d}, p7/z, [sp, z31.d] // encoding: [0xff,0xff,0x5f,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x55,0x75,0x35,0xa4
# CHECK: ldff1b  {z21.h}, p5/z, [x10, x21] // encoding: [0x55,0x75,0x35,0xa4]
# CHECK-ERROR: invalid instruction encoding
0x55,0x75,0x55,0xc4
# CHECK: ldff1b  {z21.d}, p5/z, [x10, z21.d, sxtw] // encoding: [0x55,0x75,0x55,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x55,0x75,0x15,0x84
# CHECK: ldff1b  {z21.s}, p5/z, [x10, z21.s, uxtw] // encoding: [0x55,0x75,0x15,0x84]
# CHECK-ERROR: invalid instruction encoding
0x55,0x75,0x15,0xc4
# CHECK: ldff1b  {z21.d}, p5/z, [x10, z21.d, uxtw] // encoding: [0x55,0x75,0x15,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x00,0x60,0x20,0xa4
# CHECK: ldff1b  {z0.h}, p0/z, [x0, x0] // encoding: [0x00,0x60,0x20,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xff,0xff,0x3f,0xc4
# CHECK: ldff1b  {z31.d}, p7/z, [z31.d, #31] // encoding: [0xff,0xff,0x3f,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x55,0x75,0x55,0x84
# CHECK: ldff1b  {z21.s}, p5/z, [x10, z21.s, sxtw] // encoding: [0x55,0x75,0x55,0x84]
# CHECK-ERROR: invalid instruction encoding
0xb7,0x6d,0x08,0xa4
# CHECK: ldff1b  {z23.b}, p3/z, [x13, x8] // encoding: [0xb7,0x6d,0x08,0xa4]
# CHECK-ERROR: invalid instruction encoding
0x00,0x60,0x40,0x84
# CHECK: ldff1b  {z0.s}, p0/z, [x0, z0.s, sxtw] // encoding: [0x00,0x60,0x40,0x84]
# CHECK-ERROR: invalid instruction encoding
0xff,0xff,0x3f,0x84
# CHECK: ldff1b  {z31.s}, p7/z, [z31.s, #31] // encoding: [0xff,0xff,0x3f,0x84]
# CHECK-ERROR: invalid instruction encoding
0xb7,0x6d,0x68,0xa4
# CHECK: ldff1b  {z23.d}, p3/z, [x13, x8] // encoding: [0xb7,0x6d,0x68,0xa4]
# CHECK-ERROR: invalid instruction encoding
0x55,0xf5,0x55,0xc4
# CHECK: ldff1b  {z21.d}, p5/z, [x10, z21.d] // encoding: [0x55,0xf5,0x55,0xc4]
# CHECK-ERROR: invalid instruction encoding
0xff,0x7f,0x5f,0xa4
# CHECK: ldff1b  {z31.s}, p7/z, [sp] // encoding: [0xff,0x7f,0x5f,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xff,0x7f,0x1f,0xc4
# CHECK: ldff1b  {z31.d}, p7/z, [sp, z31.d, uxtw] // encoding: [0xff,0x7f,0x1f,0xc4]
# CHECK-ERROR: invalid instruction encoding
0xff,0x7f,0x5f,0x84
# CHECK: ldff1b  {z31.s}, p7/z, [sp, z31.s, sxtw] // encoding: [0xff,0x7f,0x5f,0x84]
# CHECK-ERROR: invalid instruction encoding
0xb7,0xed,0x48,0xc4
# CHECK: ldff1b  {z23.d}, p3/z, [x13, z8.d] // encoding: [0xb7,0xed,0x48,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x55,0x75,0x55,0xa4
# CHECK: ldff1b  {z21.s}, p5/z, [x10, x21] // encoding: [0x55,0x75,0x55,0xa4]
# CHECK-ERROR: invalid instruction encoding
0x00,0x60,0x00,0xc4
# CHECK: ldff1b  {z0.d}, p0/z, [x0, z0.d, uxtw] // encoding: [0x00,0x60,0x00,0xc4]
# CHECK-ERROR: invalid instruction encoding
0xb7,0x6d,0x48,0xc4
# CHECK: ldff1b  {z23.d}, p3/z, [x13, z8.d, sxtw] // encoding: [0xb7,0x6d,0x48,0xc4]
# CHECK-ERROR: invalid instruction encoding
0xb7,0x6d,0x08,0x84
# CHECK: ldff1b  {z23.s}, p3/z, [x13, z8.s, uxtw] // encoding: [0xb7,0x6d,0x08,0x84]
# CHECK-ERROR: invalid instruction encoding
0x00,0x60,0x00,0x84
# CHECK: ldff1b  {z0.s}, p0/z, [x0, z0.s, uxtw] // encoding: [0x00,0x60,0x00,0x84]
# CHECK-ERROR: invalid instruction encoding
0x55,0x75,0x15,0xa4
# CHECK: ldff1b  {z21.b}, p5/z, [x10, x21] // encoding: [0x55,0x75,0x15,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xb7,0x6d,0x08,0xc4
# CHECK: ldff1b  {z23.d}, p3/z, [x13, z8.d, uxtw] // encoding: [0xb7,0x6d,0x08,0xc4]
# CHECK-ERROR: invalid instruction encoding
0x00,0x60,0x60,0xa4
# CHECK: ldff1b  {z0.d}, p0/z, [x0, x0] // encoding: [0x00,0x60,0x60,0xa4]
# CHECK-ERROR: invalid instruction encoding
0xb7,0x6d,0x48,0x84
# CHECK: ldff1b  {z23.s}, p3/z, [x13, z8.s, sxtw] // encoding: [0xb7,0x6d,0x48,0x84]
# CHECK-ERROR: invalid instruction encoding
0x00,0x60,0x40,0xa4
# CHECK: ldff1b  {z0.s}, p0/z, [x0, x0] // encoding: [0x00,0x60,0x40,0xa4]
# CHECK-ERROR: invalid instruction encoding
0x00,0x60,0x40,0xc4
# CHECK: ldff1b  {z0.d}, p0/z, [x0, z0.d, sxtw] // encoding: [0x00,0x60,0x40,0xc4]
# CHECK-ERROR: invalid instruction encoding
